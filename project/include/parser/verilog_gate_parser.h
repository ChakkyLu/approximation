// ./include/parser/verilog_gate_parser.h generated by reflex 1.0.9 from ./src/parser/verilog_gate_parser.l

#ifndef vg_REFLEX_HEADER_H
#define vg_REFLEX_HEADER_H
#define vg_IN_HEADER 1

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  OPTIONS USED                                                              //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#define vg_REFLEX_OPTION_fast                true
#define vg_REFLEX_OPTION_header_file         ./include/parser/verilog_gate_parser.h
#define vg_REFLEX_OPTION_lex                 vg_lex
#define vg_REFLEX_OPTION_lexer               VG_LEXER
#define vg_REFLEX_OPTION_namespace           veriloggateparser
#define vg_REFLEX_OPTION_outfile             ./src/parser/verilog_gate_parser.cpp
#define vg_REFLEX_OPTION_prefix              vg_

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  SECTION 1: %top{ user code %}                                             //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#line 12 "./src/parser/verilog_gate_parser.l"

#include "circuit.h"
using namespace nodecircuit;


////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  REGEX MATCHER                                                             //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/matcher.h>

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  ABSTRACT LEXER CLASS                                                      //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/abslexer.h>

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  LEXER CLASS                                                               //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

namespace veriloggateparser {

class VG_LEXER : public reflex::AbstractLexer<reflex::Matcher> {
#line 17 "./src/parser/verilog_gate_parser.l"

Node* current_node;
int mode;
virtual int wrap() { return 1; }
public:
Circuit* circuit;

 public:
  typedef reflex::AbstractLexer<reflex::Matcher> AbstractBaseLexer;
  VG_LEXER(
      const reflex::Input& input = reflex::Input(),
      std::ostream&        os    = std::cout)
    :
      AbstractBaseLexer(input, os)
  {
#line 25 "./src/parser/verilog_gate_parser.l"

circuit = NULL;
current_node = NULL;
mode = 255; // 128:start 129:output 130:input 131:wire 132:gateinput 254:nothing 255:finish others:gate

  }
  static const int INITIAL = 0;
  virtual int vg_lex();
  int vg_lex(
      const reflex::Input& input,
      std::ostream        *os = NULL)
  {
    in(input);
    if (os)
      out(*os);
    return vg_lex();
  }
};

} // namespace veriloggateparser

#endif
